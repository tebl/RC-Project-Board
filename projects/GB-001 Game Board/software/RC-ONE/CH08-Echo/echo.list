0000-                  4       ;
0000-                  5       ; PATTERN/TONE RECALL AND ESP TEST PROGRAM. FOR THE '6502 GAMES' HARDWARE,
0000-                  6       ; BOARD SHOULD BE JUMPERED WITH VIA CHIPS AT THE ADDRESSES SPECIFIED BELOW.
0000-                  7       ; OTHER THAN THAT THE CODE IS SHOULD BE UNCHANGED FROM THE BOOK THOUGH THERE
0000-                  8       ; WILL BE SOME DIFFERENCES DUE TO ASSEMBLER USED.
0000-                  9       ;
C000-                 10       VIA1    .EQ     $C000
CC00-                 11       VIA3    .EQ     $CC00
0000-                 12
0200-                 13               .OR     $0200
0200-                 14               .TA     $0200
0200-20 58 03         15 (  6) BEGIN   JSR     INITKEY
0203-                 16               .IN     ../../common/CH08-Echo/game.asm
0203-            I     1       ;   'ECHO'
0203-            I     2       ; PATTERN/TONE RECALL AND ESP TEST PROGRAM. THE USER GUESSES A PATTERN OF LIT
0203-            I     3       ; LEDS AND THEIR ASSOCIATED TONES. THE TONE/LIGHT COMBINATION CAN BE PLAYED,
0203-            I     4       ; SO THAT THE USER MUST REMEMBER IT AND REPLICATE IT CORRECTLY.
0203-            I     5       ;
0203-            I     6       ; OPERATING THE PROGRAM:
0203-            I     7       ;  THE BOTTOM ROW OF LEDS IS AN INDICATOR FOR PROGRAM STATUS; THE LEFT-MOST
0203-            I     8       ;  ONE ($10) INDICATES THAT THE PROGRAM IS EXPECTING THE USER TO INPUT THE
0203-            I     9       ;  LENGTH OF THE SEQUENCE TO BE GUESSED. THE SECOND FROM THE LEFT ($11)
0203-            I    10       ;  INDICATES THAT THE PROGRAM EXPECTS EITHER A GUESS (1-9), THE COMMAND TO
0203-            I    11       ;  RESTART THE GAME (0), OR THE COMMAND TO PLAY THE SEQUECE (A-F). THE KEYS
0203-            I    12       ;  ARE ASSOCIATED WITH THE LEDS 1-9.
0203-            I    13       ;
0203-            I    14       ;  LOOKING AT THE SEQUENCE WHILE IN THE MIDDLE OF GUESSING IT WILL EREASE ALL
0203-            I    15       ;  PREVIOUS GUESSES (RESET GESNO AND ERRS TO 0). AFTER A WIN, THE PROGRAM
0203-            I    16       ;  RESTARTS.
0203-            I    17
0203-            I    18       ;
0203-            I    19       ; I/O:
0203-            I    20       ;
C000-            I    21       PORT1B  .EQ     VIA1        ; PORT B
C001-            I    22       PORT1A  .EQ     VIA1+1      ; PORT A
C002-            I    23       DDR1B   .EQ     VIA1+2      ; PORT B DATA DIRECTION REGISTER
C003-            I    24       DDR1A   .EQ     VIA1+3      ; PORT A DATA DIRECTION REGISTER
C004-            I    25       T1CL    .EQ     VIA1+4
0203-            I    26
CC00-            I    27       PORT3B  .EQ     VIA3        ; PORT B
CC01-            I    28       PORT3A  .EQ     VIA3+1      ; PORT A
CC02-            I    29       DDR3B   .EQ     VIA3+2      ; PORT B DATA DIRECTION REGISTER
CC03-            I    30       DDR3A   .EQ     VIA3+3      ; PORT A DATA DIRECTION REGISTER
0203-            I    31
0203-            I    32       ;
0203-            I    33       ; VARIABLE STORAGE.
0203-            I    34       ;
0000-            I    35       ZP      .EQ     $00
0000-            I    36       DIGITS  .EQ     ZP          ; NUMBER OF DIGITS IN SEQUENCE
0001-            I    37       GESNO   .EQ     ZP+1        ; NUMBER OF CORRECT GUESS, SPECIFIES
0203-            I    38                                   ; WHERE THE USER IS IN THE SERIES.
0002-            I    39       ERRS    .EQ     ZP+2        ; NUMBER OF ERRORS MADE IN THE SERIES.
0003-            I    40       DUR     .EQ     ZP+3        ; TEMPORARY STORAGE FOR NOTE DURATION.
0004-            I    41       FREQ    .EQ     ZP+4        ; TEMPORARY STORAGE FOR NOTE FREQUENCY.
0005-            I    42       TEMP    .EQ     ZP+5        ; TEMPORARY STORAGE FOR X REGISTER.
0006-            I    43       TABLE   .EQ     ZP+6        ; STORAGE FOR SEQUECE
000F-            I    44       RND     .EQ     ZP+15       ; SCRATCHPAD FOR RANDOM # GENERATOR
0203-            I    45
0203-A9 FF       I    46 (  2) START   LDA     #$FF        ; SET UP DATA DIRECTION REGISTERS.
0205-8D 03 C0    I    47 (  4)         STA     DDR1A
0208-8D 02 C0    I    48 (  4)         STA     DDR1B
020B-8D 02 CC    I    49 (  4)         STA     DDR3B
020E-A9 00       I    50 (  2)         LDA     #0          ; CLEAR VARIABLE STORAGES
0210-8D 01 C0    I    51 (  4)         STA     PORT1A      ; ... AND LEDS
0213-85 02       I    52 (  2)         STA     ERRS
0215-85 01       I    53 (  2)         STA     GESNO
0217-AD 04 C0    I    54 (  4)         LDA     T1CL        ; GET SEED FOR RND # GENERATOR
021A-85 10       I    55 (  2)         STA     RND+1       ;  AND STORE IN RND SCRATCHPAD.
021C-85 13       I    56 (  2)         STA     RND+4
021E-A9 02       I    57 (  2)         LDA     #%010       ; TURN LED #10 ON TO INDICATE
0220-8D 00 C0    I    58 (  4)         STA     PORT1B      ; NEED FOR LENGTH INPUT.
0223-20 33 03    I    59 (  6) DIGKEY  JSR     GETKEY      ; GET LENGTH OF SERIES
0226-C9 00       I    60 (  2)         CMP     #0          ; IS IT 0?
0228-F0 F9       I    61 (2**)         BEQ     DIGKEY      ; IF YES, GET ANOTHER.
022A-C9 0A       I    62 (  2)         CMP     #10         ; LENGTH GREATER THAN 9?
022C-10 F5       I    63 (2**)         BPL     DIGKEY      ; IF YES, GET ANOTHER.
022E-85 00       I    64 (  2)         STA     DIGITS      ; SAVE VALID LENGTH
0230-AA          I    65 (  2)         TAX                 ; USE LENGTH-1 AS INDEX FOR FILLING...
0231-CA          I    66 (  2)         DEX                 ; ... SERIES W/RANDOM VALUES.
0232-86 05       I    67 (  3) FILL    STX     TEMP        ; SAVE X FROM 'RANDOM'
0234-20 EA 02    I    68 (  6)         JSR     RANDOM
0237-A6 05       I    69 (  3)         LDX     TEMP        ; RESTORE X
0239-F8          I    70 (  2)         SED                 ; DO A DECIMAL ADJUST
023A-18          I    71 (  2)         CLC
023B-69 00       I    72 (  2)         ADC     #0
023D-D8          I    73 (  2)         CLD
023E-29 0F       I    74 (  2)         AND     #$0F        ; REMOVE UPPER NIBBLE SO NUMBER IS <10
0240-F0 F0       I    75 (2**)         BEQ     FILL        ; # CAN'T BE ZERO
0242-95 06       I    76 (  4)         STA     TABLE,X     ; STORE # IN TABLE
0244-CA          I    77 (  2)         DEX                 ; DECREMENT FOR NEXT
0245-10 EB       I    78 (2**)         BPL     FILL        ; LOOP IF NOT DONE
0247-A9 00       I    79 (  2) KEY     LDA     #0          ; CLEAR LEDS
0249-8D 01 C0    I    80 (  4)         STA     PORT1A
024C-A9 04       I    81 (  2)         LDA     #%0100      ; TURN INPUT INDICATOR ON.
024E-8D 00 C0    I    82 (  4)         STA     PORT1B
0251-20 33 03    I    83 (  6)         JSR     GETKEY      ; GET GUESS OR PLAY COMMAND
0254-C9 00       I    84 (  2)         CMP     #0          ; IS IT 0?
0256-F0 AB       I    85 (2**) STRTJP  BEQ     START       ; IF YES, RESTART.
0258-C9 0A       I    86 (  2)         CMP     #10         ; NUMBER < 10 ?
025A-30 22       I    87 (2**)         BMI     EVAL        ; IF YES, EVALUATE GUESS.
025C-            I    88       ;
025C-            I    89       ; ROUTINE TO DISPLAY SERIES TO BE GUESSED BY LIGHTING LEDS AND PLAYING
025C-            I    90       ; TONES IN SEQUECE.
025C-            I    91       ;
025C-A2 00       I    92 (  2) SHOW    LDX     #0
025E-86 01       I    93 (  3)         STX     GESNO       ; CLEAR CURRENT GUESS NUMBER
0260-86 02       I    94 (  3)         STX     ERRS        ; CLEAR CURRENT ERROR NUMBER
0262-B5 06       I    95 (  4) SHOWLP  LDA     TABLE,X     ; GET X-TH ENTRY IN SERIES TABLE.
0264-86 05       I    96 (  3)         STX     TEMP        ; SAVE X
0266-20 D2 02    I    97 (  6)         JSR     LIGHT       ; LIGHT LED # (TABLE(X))
0269-20 FD 02    I    98 (  6)         JSR     PLAY        ; PLAY TONE # (TABLE(X))
026C-A0 FF       I    99 (  2)         LDY     #$FF        ; SET LOOP COUNTER FOR DELAY
026E-66 03       I   100 (  5) DELAY   ROR     DUR         ; WASTE TIME
0270-26 03       I   101 (  5)         ROL     DUR
0272-88          I   102 (  2)         DEY                 ; COUNT DOWN
0273-D0 F9       I   103 (2**)         BNE     DELAY       ; IF NOT DONE, WASTE SOME MORE TIME
0275-A6 05       I   104 (  3)         LDX     TEMP        ; RESTORE X
0277-E8          I   105 (  2)         INX                 ; INCREMENT INDEX TO SHOW NEXT
0278-E4 00       I   106 (  3)         CPX     DIGITS      ; ALL DIGITS SHOWN?
027A-D0 E6       I   107 (2**)         BNE     SHOWLP      ; IF NOT, SHOW NEXT.
027C-F0 C9       I   108 (2**)         BEQ     KEY         ; DONE, SO GET NEXT INPUT.
027E-            I   109       ;
027E-            I   110       ; ROUTINE TO EVALUATE GUESSES OF PLAYER.
027E-            I   111       ;
027E-A6 01       I   112 (  3) EVAL    LDX     GESNO       ; GET NUMBER OF GUESS.
0280-D5 06       I   113 (  4)         CMP     TABLE,X     ; GUESS = CORRESPONDING DIGIT = ?
0282-F0 0D       I   114 (2**)         BEQ     CORRECT     ; IF YES, SHOW PLAYER.
0284-E6 02       I   115 (  5) WRONG   INC     ERRS        ; GUESS WRONG, ANOTHER ERROR FOR THE TALLY.
0286-A9 80       I   116 (  2)         LDA     #$80        ; DURATION FOR LOW TONE TO INDICATE A
0288-85 03       I   117 (  2)         STA     DUR         ;  BAD GUESS.
028A-A9 FF       I   118 (  2)         LDA     #$FF        ; FREQUENCY CONSTANT
028C-20 07 03    I   119 (  6)         JSR     PLYTON      ; PLAY IT
028F-F0 06       I   120 (2**)         BEQ     ENDCHK      ; CHECK FOR ENDGAME
0291-20 D2 02    I   121 (  6) CORRECT JSR     LIGHT       ; VALIDATE CORRECT GUESS...
0294-20 FD 02    I   122 (  6)         JSR     PLAY
0297-E6 01       I   123 (  5) ENDCHK  INC     GESNO       ; ONE MORE GUESS TAKEN.
0299-A5 00       I   124 (  3)         LDA     DIGITS
029B-C5 01       I   125 (  3)         CMP     GESNO       ; ALL DIGITS GUESSED?
029D-D0 A8       I   126 (2**)         BNE     KEY         ; IF NOT, GET NEXT.
029F-A5 02       I   127 (  3)         LDA     ERRS        ; GET NUMBER OF ERRORS.
02A1-C9 00       I   128 (  2)         CMP     #0          ; ANY ERRORS?
02A3-F0 15       I   129 (2**)         BEQ     WIN         ; IF NOT, PLAYER WINS.
02A5-20 D2 02    I   130 (  6) LOSE    JSR     LIGHT       ; SHOW NUMBER OF ERRORS.
02A8-A9 09       I   131 (  2)         LDA     #9          ; PLAY 8 DESCENDING TONES
02AA-48          I   132 (  3) LOSELP  PHA
02AB-20 FD 02    I   133 (  6)         JSR     PLAY
02AE-68          I   134 (  4)         PLA
02AF-38          I   135 (  2)         SEC
02B0-E9 01       I   136 (  2)         SBC     #1
02B2-D0 F6       I   137 (2**)         BNE     LOSELP
02B4-85 01       I   138 (  2)         STA     GESNO       ; CLEAR VARIABLES
02B6-85 02       I   139 (  2)         STA     ERRS
02B8-F0 8D       I   140 (2**)         BEQ     KEY         ; GET NEXT GUESS SEQUECE
02BA-A9 FF       I   141 (  2) WIN     LDA     #$FF        ; TURN ALL LEDS ON FOR WIN
02BC-8D 01 C0    I   142 (  4)         STA     PORT1A
02BF-8D 00 C0    I   143 (  4)         STA     PORT1B
02C2-A9 01       I   144 (  2)         LDA     #1          ; PLAY 8 ASCENDING TONES
02C4-48          I   145 (  3) WINLP   PHA
02C5-20 FD 02    I   146 (  6)         JSR     PLAY
02C8-68          I   147 (  4)         PLA
02C9-18          I   148 (  2)         CLC
02CA-69 01       I   149 (  2)         ADC     #01
02CC-C9 0A       I   150 (  2)         CMP     #10
02CE-D0 F4       I   151 (2**)         BNE     WINLP
02D0-F0 84       I   152 (2**)         BEQ     STRTJP      ; USE DOUBLE-JUMP FOR RESTART
02D2-            I   153       ;
02D2-            I   154       ; SUBROUTINE 'LIGHT'
02D2-            I   155       ; ROUTINE TO LIGHT N-TH LED, WHERE N IS THE NUMBER PASSED AS A PARAMETER IN
02D2-            I   156       ; THE ACCUMULATOR.
02D2-            I   157       ;
02D2-48          I   158 (  3) LIGHT   PHA                 ; SAVE A
02D3-A8          I   159 (  2)         TAY                 ; USE AS COUNTER IN Y
02D4-A9 00       I   160 (  2)         LDA     #0          ; CLEAR A FOR BIT SHIFT
02D6-8D 00 C0    I   161 (  4)         STA     PORT1B      ; CLEAR HI LEDS.
02D9-38          I   162 (  2)         SEC                 ; GENERATE HI BIT TO SHIFT LEFT.
02DA-2A          I   163 (  2) LTSHFT  ROL     A           ; MOVE HI BIT LEFT.
02DB-88          I   164 (  2)         DEY                 ; DECREMENT COUNTER
02DC-D0 FC       I   165 (2**)         BNE     LTSHFT      ; SHIFTS DONE?
02DE-8D 01 C0    I   166 (  4)         STA     PORT1A      ; STORE CORRECT PATTERN
02E1-90 05       I   167 (2**)         BCC     LTCC        ; BIT 9 NOT HI, DONE.
02E3-A9 01       I   168 (  2)         LDA     #1
02E5-8D 00 C0    I   169 (  4)         STA     PORT1B      ; TURN LED 9 ON.
02E8-68          I   170 (  4) LTCC    PLA                 ; RESTORE A
02E9-60          I   171 (  6)         RTS
02EA-            I   172       ;
02EA-            I   173       ; SUBROUTINE 'RANDOM'
02EA-            I   174       ; RANDOM NUMBER GENERATOR, RETURNS WITH NEW RANDOM NUMBER IN ACCUMULATOR.
02EA-            I   175       ;
02EA-38          I   176 (  2) RANDOM  SEC
02EB-A5 10       I   177 (  3)         LDA     RND+1
02ED-65 13       I   178 (  3)         ADC     RND+4
02EF-65 14       I   179 (  3)         ADC     RND+5
02F1-85 0F       I   180 (  2)         STA     RND
02F3-A2 04       I   181 (  2)         LDX     #4
02F5-B5 0F       I   182 (  4) RNDLP   LDA     RND,X
02F7-95 10       I   183 (  4)         STA     RND+1,X
02F9-CA          I   184 (  2)         DEX
02FA-10 F9       I   185 (2**)         BPL     RNDLP
02FC-60          I   186 (  6)         RTS
02FD-            I   187       ;
02FD-            I   188       ; SUBROUTINE 'PLAY'
02FD-            I   189       ; ROUTINE TO PLAY TONES WHOSE NUMBER IS PASSED IN BY ACCUMULATOR. IF ENTERED
02FD-            I   190       ; AT PLYTON, IT WILL PLAY TONE WHOSE LENGTH IS IN DUR, FREQUENCY IN THE
02FD-            I   191       ; ACCUMULATOR INSTEAD.
02FD-A8          I   192 (  2) PLAY    TAY                 ; USE TONE # AS INDEX...
02FE-88          I   193 (  2)         DEY                 ; DECREMENT TO MATCH TABLES
02FF-B9 2A 03    I   194 ( 4*)         LDA     DURTAB,Y    ; GET DURATION FOR TONE N-TH TONE
0302-85 03       I   195 (  2)         STA     DUR         ; SAVE IT.
0304-B9 21 03    I   196 ( 4*)         LDA     NOTAB,Y     ; GET FREQUENCY CONSTANT FOR N-TH TONE
0307-85 04       I   197 (  2) PLYTON  STA     FREQ        ; SAVE IT.
0309-A9 00       I   198 (  2)         LDA     #0          ; SET SPKR PORT LO.
030B-8D 00 CC    I   199 (  4)         STA     PORT3B
030E-A6 03       I   200 (  3)         LDX     DUR         ; GET DURATION IN NUMBER OF 1/2 CYCLES.
0310-A4 04       I   201 (  3) FL2     LDY     FREQ        ; GET FREQUENCY
0312-88          I   202 (  2) FL1     DEY                 ; COUNT DOWN DELAY...
0313-18          I   203 (  2)         CLC                 ; WASTE TIME
0314-90 00       I   204 (2**)         BCC     FL0
0316-D0 FA       I   205 (2**) FL0     BNE     FL1         ; LOOP FOR DELAY
0318-49 FF       I   206 (  2)         EOR     #$FF        ; COMPLEMENT PORT
031A-8D 00 CC    I   207 (  4)         STA     PORT3B
031D-CA          I   208 (  2)         DEX                 ; COUNT DOWN DURATION...
031E-D0 F0       I   209 (2**)         BNE     FL2         ; LOOP UNTIL NOTE OVER.
0320-60          I   210 (  6)         RTS                 ; DONE.
0321-            I   211       ;
0321-            I   212       ; TABLE FOR NOTE FREQUENCIES.
0321-            I   213       ;
0321-C9 BE A9 96 
     8E 7E 70 64 
     5E          I   214       NOTAB   .HS     C9.BE.A9.96.8E.7E.70.64.5E
032A-            I   215       ;
032A-            I   216       ; TABLE FOR NOTE DURATIONS.
032A-            I   217       ;
032A-6B 72 80 8F 
     94 AA BF D7 
     E4          I   218       DURTAB  .HS     6B.72.80.8F.94.AA.BF.D7.E4
0333-                 17               .IN     ../../common/CH01-Getkey/getkey_routine.asm
0333-            I     1       ; 'GETKEY' KEYBOARD INPUT ROUTINE READS AND DEBOUNCES KEYBOARD. RETURNS WITH
0333-            I     2       ; KEY NUMBER IN ACCUMULATOR IF KEY DOWN. OPERATION: SENDS NUMBERS 0-F TO 74154
0333-            I     3       ; (4 TO 16 LINE DECODER), WHICH GROUNDS ONE SIDE OF KEYSWITCHES ONE AT A TIME.
0333-            I     4       ; IF A KEY IS DOWN, PA7 OF VIA #3 WILL BE GROUNDED, AND THE CURRENT VALUE
0333-            I     5       ; APPLIED TO THE 74154 BE THE KEY NUMBER. WHEN THE PROGRAM DETECTS A KEY CLOSE
0333-            I     6       ; CHECKS FOR KEY CLOSURE FOR 50 MS. TO ELIMINATE BOUNCE.
0333-            I     7       ; NOTE: IF NO KEY IS PRESSED, GETKEY WILL WAIT.
0333-            I     8       ;
0333-2C 01 CC    I     9 (  4) GETKEY  BIT     PORT3A      ; SEE IF KEY IS STILL DOWN FROM LAST KEY CLOSURE:
0336-            I    10                                   ;  KEYSTROBE IN 'N' STATUS BIT.
0336-10 FB       I    11 (2**)         BPL     GETKEY      ; IF YES, WAIT FOR KEY RELEASE
0338-A2 0F       I    12 (  2) RSTART  LDX     #15         ; SET KEY COUNTER TO 15
033A-8E 00 CC    I    13 (  4) NXTKEY  STX     PORT3B      ; OUTPUT KEY # TO 74154
033D-2C 01 CC    I    14 (  4)         BIT     PORT3A      ; SEE IF KEY DOWN: STROBE IN 'N'
0340-10 05       I    15 (2**)         BPL     BOUNCE      ;  IF YES, GO DEBOUNCE
0342-CA          I    16 (  2)         DEX                 ;   DECREMENT KEY #
0343-10 F5       I    17 (2**)         BPL     NXTKEY      ;  NO, DO NEXT KEY
0345-30 F1       I    18 (2**)         BMI     RSTART      ; START OVER
0347-8A          I    19 (  2) BOUNCE  TXA                 ; SAVE KEY NUMBER IN A
0348-A0 12       I    20 (  2)         LDY     #$12        ; OUTER LOOP CNT LOAD FOR DELAY OF 50 MS.
034A-A2 FF       I    21 (  2) LP1     LDX     #$FF        ; INNER 11 US. LOOP
034C-2C 01 CC    I    22 (  4) LP2     BIT     PORT3A      ; SEE IF KEY STILL DOWN
034F-30 E7       I    23 (2**)         BMI     RSTART      ; IF NOT, KEY NOT VALID, RESTART
0351-CA          I    24 (  2)         DEX
0352-D0 F8       I    25 (2**)         BNE     LP2         ; THIS LOOP USES 2115*5 US.
0354-88          I    26 (  2)         DEY
0355-D0 F3       I    27 (2**)         BNE     LP1         ; OUTER LOOP: TOTAL IS 50 MS.
0357-60          I    28 (  6)         RTS                 ; DONE: KEY IN A.
0358-            I    29       ;
0358-            I    30       ; SUBROUTINE 'INITKEY'
0358-            I    31       ; TAKES CARE OF INITIALIZING VIA #3 FOR USING WITH THE GETKEY ROUTINE FROM
0358-            I    32       ; THE CODE.
0358-            I    33       ;
0358-A9 00       I    34 (  2) INITKEY LDA     #0
035A-8D 03 CC    I    35 (  4)         STA     DDR3A       ; SET KEY STROBE PORT FOR INPUT
035D-A9 FF       I    36 (  2)         LDA     #$FF
035F-8D 02 CC    I    37 (  4)         STA     DDR3B       ; SET KEYS FOR OUTPUT
0362-60          I    38 (  6)         RTS
